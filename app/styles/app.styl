@import 'helpers/sprite'
@import 'helpers/svg'
@import 'helpers/variables'
@import 'helpers/mixins'

@import 'base/fonts'
@import 'base/optimize'
@import 'base/base'

@import '../blocks/**/*'

random(val)
	return floor(math(0, 'random') * (val))

$view-size = 600px
$cube-size = 30px
$cube-size2 = 20px
$margin = 2px
$color = #e31749
$color2 = #f7f7f7
$cubes = 14
$cubes2 = 10
$layers = 6
$layers2 = 26
$duration = 3s
$intro-duration = 1s
$intro-delay = 1s

n($v)
	$n = round(random(1)) * 2 - 1
	$n * $v

body
	height: 100vh
	overflow: hidden
	background: #222

.list
	display: flex
	align-items: center
	justify-content: center
	height: 50vh

.view
	height: $view-size
	width: $view-size
	visibility: hidden
	perspective: 700px
	perspective-origin: 50% 0
	*
		transform-style: preserve-3d

.cube
	position: relative
	height: 50%
	width: (100% / $cubes * 2)
	animation: enter $intro-duration $intro-delay forwards
	.inner
		position: absolute
		top: $margin
		right: $margin
		bottom: $margin
		left: $margin
	.side
		position: absolute
		top: 0
		right: 0
		bottom: 0
		left: 0
		visibility: visible
		&:nth-child(1)
			transform: rotateX(-90deg) translateZ($cube-size / 2 - $margin)
			background: mix($color, white, 70%)
		&:nth-child(2)
			transform: rotateX(90deg) translateZ($cube-size / 2 - $margin)
			background: mix($color, white, 70%)
		&:nth-child(3)
			transform: rotateY(90deg) translateZ($cube-size / 2 - $margin)
			background: mix($color, white, 90%)
		&:nth-child(4)
			transform: rotateY(-90deg) translateZ($cube-size / 2 - $margin)
			background: mix($color, white, 90%)
		&:nth-child(5)
			transform: rotateY(-180deg) translateZ($cube-size / 2 - $margin)
			background: mix($color, black, 90%)
		&:nth-child(6)
			transform: rotateY(0) translateZ($cube-size / 2 - $margin)
			background: mix($color, black, 90%)

.layer
	position: absolute
	top: 50%
	left: 50%
	transform: translate(-50%, -50%)
	height: ($cube-size * 2)
	width: ($cube-size * $cubes / 2)
	.axis
		position: absolute
		top: 0
		right: 0
		bottom: 0
		left: 0
		display: flex
		flex-flow: row wrap
		animation: rotate $duration cubic-bezier(0.81, -0.59, 0.54, 1.8) infinite
	$n = 0
	for $i in (0..($layers - 1))
		&:nth-child({$i + 1})
			transform: translate(-50%, -50%) translateY(50% * ($i - $layers / 2)) rotateX(90deg)
			z-index: ($layers - $i)
			.axis
				animation-delay: ($i * $duration / $layers / 2 + $intro-duration + $intro-delay)
			for $j in (0..($cubes - 1))
				$x = n($cube-size * random($cubes))
				$y = n($cube-size * random($cubes))
				$z = n($cube-size * random($cubes))
				$n = $n + 1
				.cube
					&:nth-child({$j + 1})
						transform: translate3d($x, $y, $z)
				@keyframes enter-{$n}
					to
						transform: translate3d(0, 0, 0)

@keyframes enter
	to
		transform: translate3d(0, 0, 0)

@keyframes rotate
	0%
		transform: rotate(0)
	50%, 100%
		transform: rotate(-360deg)
